
import requests

# API URL from GCP
#url = "https://5000-cs-852786567045-default.cs-asia-southeast1-palm.cloudshell.dev/predict"
url = "http://192.168.1.10:5001/predict"

# Sample Input JSON
data = {
  "temperature": [25, 26, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27],
  "humidity": [50, 52, 54, 55, 53, 52, 50, 48, 46, 44, 43, 42, 44, 46, 48, 50, 52, 54, 55, 56, 57, 58, 59, 60],
  "wind_speed": [10, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14],
  "air_pressure": [1010, 1011, 1012, 1013, 1012, 1011, 1010, 1009, 1008, 1007, 1006, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017],
  "dew_point": [10, 11, 12, 13, 12, 11, 10, 9, 8, 7, 6, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
  "cloud_cover": [20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18],
  "gpu_utilization": [42, 43, 42, 41, 42, 40, 43, 32, 34, 36, 37, 38, 34, 36, 38, 41, 43, 43, 44, 45, 47, 48, 49, 50],
  "fan_speed": [2000, 2100, 2200, 2300, 2200, 2100, 2000, 1900, 1800, 1700, 1600, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700],
  "core_temperature": [55, 56, 57, 58, 57, 56, 55, 54, 53, 52, 51, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62],
  "vram_utilization": [4000, 4100, 4200, 4300, 4200, 4100, 4000, 3900, 3800, 3700, 3600, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700],
  "power_limit": [100, 101, 102, 103, 102, 101, 100, 99, 98, 97, 96, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107],
  "workload_type": [0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1, 0, 1, 2, 3, 4, 3, 2, 1],
  "hour_of_day": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
  "day_of_week": [0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3],
  "month_of_year": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
}

# Headers
headers = {"Content-Type": "application/json"}

# Send the POST request
try:
    response = requests.post(url, json=data, headers=headers)
    response.raise_for_status()  # Raise an error if the request failed

    # Print the response
    print("Response JSON:")
    print(response.json())

except requests.exceptions.RequestException as e:
    print("Error:", e)